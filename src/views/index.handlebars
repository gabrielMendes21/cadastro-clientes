<div class="col-1">
  &nbsp;
</div>
<div class="col bg-white">

  <br>
  <h4>Cadastrar - Agendamento de Potenciais Clientes</h4>
  <p>Sistema utilizado para cadastrar clientes.</p>

  <form>
    <div class="mb-3">
      <label for="nome" class="form-label">Nome: </label>
      <input type="text" class="form-control" id="nome" name="nome" aria-describedby="emailHelp">
    </div>
    
    <div class="row">
      <div class="col">
        <div class="mb-3">
          <label for="idade" class="form-label">Idade: </label>
          <input type="text" class="form-control" id="idade" name="idade" aria-describedby="emailHelp">
        </div>
      </div>

      <div class="col">
        <div class="mb-3">
          <label for="sexo" class="form-label">Sexo: </label>
          <select class="form-select" name="sexo" id="sexo">
            <option value="Feminino">Feminino</option>
            <option value="Masculino">Masculino</option>
          </select>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <div class="row">
        <div class="col">
          <label for="cep" class="form-label">CEP: </label>
          <input type="text" class="form-control" id="cep" name="cep" aria-describedby="emailHelp">
        </div>

        <div class="col">
          <label for="uf" class="form-label">UF: </label>
          <input type="text" class="form-control" id="uf" name="uf" aria-describedby="emailHelp" readonly>
        </div>
      </div>     
    </div>

    <div class="mb-3">
      <div class="row">
        <div class="col">
          <label for="bairro" class="form-label">Bairro: </label>
          <input type="text" class="form-control" id="bairro"  name="bairro" aria-describedby="emailHelp" readonly>
        </div>

        <div class="col">
          <label for="numero" class="form-label">Número: </label>
          <input type="text" class="form-control" id="numero" name="numero" aria-describedby="emailHelp">
        </div>
        

        <div class="col">
          <label for="logradouro" class="form-label">Logradouro: </label>
          <input type="text" class="form-control" id="logradouro" name="logradouro" aria-describedby="emailHelp" readonly>
        </div>
      </div>     
    </div>

    <div class="mb-3">
      <div class="row">
        <div class="col">
          <label for="cidade" class="form-label">Cidade: </label>
          <input type="text" class="form-control" id="cidade" name="cidade" aria-describedby="emailHelp" readonly>
        </div>
      </div>     
    </div>

    <div style="text-align: center;">
      <button type="submit" class="btn btn-dark">Cadastrar</button>
    </div>
  </form>
  {{!-- arquivo que contém as funcionalidades de preencher o endereço --}}
  {{!-- <script type="module" src="dadosEndereco.js"></script> --}}

  <script>
    const form = document.querySelector("form");
    const CEPInput = document.querySelector("#cep");

    // Fazer a requisição para o ViaCEP e armazenar a resposta no cache do servidor
    CEPInput.addEventListener("change", async (event) => {
        try {
          // Requisição para obter os dados do CEP fornecido
          const response = await fetch('./cacheCEP', {
            method: 'POST',
            body: JSON.stringify({
              CEP: event.currentTarget.value
            }),
            headers: {
              'Content-Type': 'application/json'
            }
          });

          const CEPData = await response.json();

          //console.log(CEPData);
          preencher(CEPData);           
        } catch(err) {
          console.log(err);
        }
    })

    //preenche de acordo com 
    function preencher(CEPData) {           
      try {
        document.getElementById('uf').value = CEPData.uf || '';
        document.getElementById('bairro').value = CEPData.bairro || '';
        document.getElementById('cidade').value = CEPData.localidade || '';
        document.getElementById('logradouro').value = CEPData.logradouro || '';

          
      } catch (error) {
        document.getElementById('output').innerText = 'Erro ao buscar o CEP. Tente novamente.';
        console.error(error);
      }
    }

    // Enviar o formulário
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      // Coletando os dados do formulário
      const form = event.currentTarget;
      const formData = new FormData(form);

      // Convertendo os dados para um objeto
      const data = Object.fromEntries(formData.entries());

      // Estruturando os dados no formato esperado pelo backend
      const formattedData = {
        nome: data.nome,
        idade: data.idade,
        sexo: data.sexo,
        dadosCEP: {
          cep: data.cep || '',
          uf: data.uf || '',
          bairro: data.bairro || '',
          numero: data.numero || '',
          logradouro: data.logradouro || '',
          cidade: data.cidade || ''
        }
      };

      try {
        // Enviando a requisição para a rota /cadastrar
        const response = await fetch('/cadastrar', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formattedData)
        });

        if (response.ok) {
          console.log("Cadastrado com sucesso!");
          const result = await response.json();
          console.log(result);
        } else {
          console.error("Erro ao cadastrar:", response.statusText);
        }
      } catch (error) {
        console.error("Erro na requisição:", error);
      }
    }) 
  </script>
</div>


